<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ucar.crm.mapper.EmployeeMapper">
    <resultMap id="BaseResultMap" type="com.ucar.crm.domain.Employee">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="realname" property="realname" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="tel" property="tel" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <!--    <result column="dept_id" property="dept.id" jdbcType="BIGINT" />-->
        <result column="inputtime" property="inputtime" jdbcType="TIMESTAMP"/>
        <result column="state" property="state" jdbcType="BIT"/>
        <result column="admin" property="admin" jdbcType="BIT"/>
        <result column="role" property="role" jdbcType="VARCHAR"/>
        <association property="dept" javaType="com.ucar.crm.domain.Department" columnPrefix="d_">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
        </association>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from employee
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.ucar.crm.domain.Employee" useGeneratedKeys="true" keyProperty="id">
    insert into employee (username, realname, password, 
      tel, email, dept_id, 
      inputtime, state, admin, 
      role)
    values (#{username,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{tel,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{dept.id,jdbcType=BIGINT}, 
      #{inputtime,jdbcType=TIMESTAMP}, #{state,jdbcType=BIT}, #{admin,jdbcType=BIT}, 
      #{role,jdbcType=VARCHAR})
  </insert>
    <update id="updateByPrimaryKey" parameterType="com.ucar.crm.domain.Employee">
    update employee
    set username = #{username,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      dept_id = #{dept.id,jdbcType=BIGINT},
      inputtime = #{inputtime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=BIT},
      admin = #{admin,jdbcType=BIT},
      role = #{role,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select id, username, realname, password, tel, email, dept_id, inputtime, state, admin, 
    role
    from employee
    where id = #{id,jdbcType=BIGINT}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, username, realname, password, tel, email, dept_id, inputtime, state, admin, 
    role
    from employee
  </select>

    <select id="getEmployeeByLogin" resultMap="BaseResultMap">
    select * from employee where username=#{username} and password=#{password}
  </select>

    <sql id="where_sql">
        <where>
            <if test="keyword!=null">
                and (
                e.username like concat('%',#{keyword},'%')
                or e.realname like concat('%',#{keyword},'%')
                or e.tel like concat('%',#{keyword},'%')
                )
            </if>
        </where>
    </sql>

    <select id="queryPageCount" resultType="java.lang.Long">
        select count(e.id) from employee e
        <include refid="where_sql"/>
    </select>

    <select id="queryPageResult" resultMap="BaseResultMap">
        select e.id,e.username,e.realname,e.tel,e.email,e.inputtime,e.state,e.admin,
        d.id as d_id,d.name as d_name
        from employee e
        left join department d
        on (e.dept_id = d.id)
        <include refid="where_sql"/>
        limit #{start},#{rows}
    </select>

    <update id="remove" parameterType="java.lang.Long">
        update employee set state = 0 where id=#{id}
    </update>
</mapper>